require 'minitest/autorun'
require './spiral.rb'

class SpiralTest < Minitest::Test
  def test_responds_to_call_with_a_parameter
    assert Spiral.respond_to?(:call)
  end

  def test_prints_out_the_correct_spiral_for_a_the_parameter_of_5
    expected_result = [
      ['*', '*', '*', '*', '*' ],
      [' ', ' ', ' ', ' ', '*' ],
      [' ', '*', '*', ' ', '*' ],
      [' ', '*', ' ', ' ', '*' ],
      [' ', '*', '*', '*', '*' ],
    ]
    assert_equal expected_result, Spiral.call(size: 5)
  end

  def test_prints_out_the_correct_spiral_for_a_the_parameter_of_10
    expected_result = [
      ['*', '*', '*', '*', '*', '*', '*', '*', '*', '*' ],
      [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*' ],
      [' ', '*', '*', '*', '*', '*', '*', '*', ' ', '*' ],
      [' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', '*', '*', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', '*', '*', '*', '*', ' ', '*' ],
      [' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*' ],
      [' ', '*', '*', '*', '*', '*', '*', '*', '*', '*' ],
    ]
    assert_equal expected_result, Spiral.call(size: 10)
  end

  def test_prints_out_the_correct_spiral_for_a_the_parameter_of_12
    expected_result = [
      ['*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' ],
      [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*' ],
      [' ', '*', '*', '*', '*', '*', '*', '*', '*', '*', ' ', '*' ],
      [' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', '*', '*', '*', '*', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', ' ', '*', '*', '*', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*' ],
      [' ', '*', ' ', '*', '*', '*', '*', '*', '*', '*', ' ', '*' ],
      [' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*' ],
      [' ', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' ]
    ]
    assert_equal expected_result, Spiral.call(size: 12)
  end
end
